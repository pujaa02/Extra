npx create-react-app excel-import
cd excel-import
npm install xlsx axios


import React, { useState } from 'react';
import * as XLSX from 'xlsx';
import axios from 'axios';

const App = () => {
  const [excelData, setExcelData] = useState([]);

  const handleFileUpload = (event) => {
    const file = event.target.files[0];
    const reader = new FileReader();

    reader.onload = (e) => {
      const data = new Uint8Array(e.target.result);
      const workbook = XLSX.read(data, { type: 'array' });
      const sheetName = workbook.SheetNames[0];
      const worksheet = workbook.Sheets[sheetName];
      const json = XLSX.utils.sheet_to_json(worksheet);
      setExcelData(json);
    };

    reader.readAsArrayBuffer(file);
  };

  const handleSubmit = () => {
    axios.post('http://localhost:5000/api/upload', { data: excelData })
      .then(response => {
        console.log('Data successfully uploaded:', response);
      })
      .catch(error => {
        console.error('There was an error uploading the data:', error);
      });
  };

  return (
    <div>
      <input type="file" onChange={handleFileUpload} />
      <button onClick={handleSubmit}>Upload Data</button>
    </div>
  );
};

export default App;


mkdir server
cd server
npm init -y
npm install express mysql body-parser cors


const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');
const mysql = require('mysql');

const app = express();
app.use(cors());
app.use(bodyParser.json());

const db = mysql.createConnection({
  host: 'localhost',
  user: 'root',  // use your MySQL username
  password: 'password',  // use your MySQL password
  database: 'excel_data',  // use your database name
});

db.connect(err => {
  if (err) {
    console.error('Error connecting to the database:', err);
    return;
  }
  console.log('Connected to the MySQL database.');
});

app.post('/api/upload', (req, res) => {
  const data = req.body.data;

  const values = data.map(item => [item.name, item.age, item.address]); // Adjust according to your columns

  const sql = 'INSERT INTO users (name, age, address) VALUES ?';
  db.query(sql, [values], (err, result) => {
    if (err) {
      console.error('Error inserting data:', err);
      res.status(500).send('Error inserting data');
      return;
    }
    res.send('Data successfully inserted');
  });
});

app.listen(5000, () => {
  console.log('Server is running on port 5000');
});


cd excel-import
npm start

cd server
node index.js

